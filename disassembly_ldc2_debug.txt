james@ubuntu18:~/source/swiftover$ lldb-8 -- ./swiftover -t vcf -c resources/GRCh37_to_GRCh38.chain -g ../ref/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz -i ../ref/gnomad.exomes.r2.1.1.sites.21.vcf.gz -u /dev/null -o /dev/null
(lldb) target create "./swiftover"
Current executable set to './swiftover' (x86_64).
(lldb) settings set -- target.run-args  "-t" "vcf" "-c" "resources/GRCh37_to_GRCh38.chain" "-g" "../ref/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz" "-i" "../ref/gnomad.exomes.r2.1.1.sites.21.vcf.gz" "-u" "/dev/null" "-o" "/dev/null"
(lldb) b vcf.d:214
Breakpoint 1: where = swiftover`_D7dhtslib3vcf9VCFRecord5chromMFNdAyaZv + 123 at vcf.d:214:9, address = 0x000000000010ce1b
(lldb) r
Process 18285 launched: '/home/james/source/swiftover/swiftover' (x86_64)
[I::swiftover.vcf.liftVCF] Added 25 contig entries from chainfile
[W::swiftover.vcf.liftVCF] 57 contigs present in chainfile but not destination genome.
error: need to add support for DW_TAG_base_type 'immutable(char)' encoded with DW_ATE = 0x10, bit_size = 8
Process 18285 stopped
* thread #1, name = 'swiftover', stop reason = breakpoint 1.1
    frame #0: 0x0000555555660e1b swiftover`_D7dhtslib3vcf9VCFRecord5chromMFNdAyaZv(this=0x00007ffff07da8c0, c=(length = 2, ptr = 0x00007ffff04fb480)) at vcf.d:214:9
   211 	    void chrom(string c)
   212 	    {
   213 	        auto rid = bcf_hdr_name2id(this.vcfheader.hdr, toStringz(c));
-> 214 	        if (rid == -1) {
   215 	            hts_log_error(__FUNCTION__, format("contig not found: %s", c));
   216 	            throw new Exception("contig not found");
   217 	        }
(lldb) frame var
error: need to add support for DW_TAG_base_type 'char' encoded with DW_ATE = 0x10, bit_size = 8
(VCFRecord *) this = 0x00007ffff07da8c0
(string) c = (length = 2, ptr = 0x00007ffff04fb480)
(int) rid = 20
(lldb) dis -f -m

** 211 	    void chrom(string c)

swiftover`_D7dhtslib3vcf9VCFRecord5chromMFNdAyaZv:
    0x555555660da0 <+0>:   pushq  %rbp
    0x555555660da1 <+1>:   movq   %rsp, %rbp
    0x555555660da4 <+4>:   subq   $0x110, %rsp              ; imm = 0x110

   209 	    /// Set chromosome (CHROM)
   210 	    @property
** 211 	    void chrom(string c)
   212 	    {

    0x555555660dab <+11>:  movq   %rdi, -0xa8(%rbp)
    0x555555660db2 <+18>:  movq   %rdx, -0xb0(%rbp)
    0x555555660db9 <+25>:  movq   %rsi, -0xb8(%rbp)

** 213 	        auto rid = bcf_hdr_name2id(this.vcfheader.hdr, toStringz(c));

    0x555555660dc0 <+32>:  movq   -0xa8(%rbp), %rdx
    0x555555660dc7 <+39>:  movq   0x18(%rdx), %rdx
    0x555555660dcb <+43>:  movq   (%rdx), %rdx
    0x555555660dce <+46>:  movq   -0xb8(%rbp), %rdi
    0x555555660dd5 <+53>:  movq   -0xb0(%rbp), %rsi
    0x555555660ddc <+60>:  movq   %rdx, -0xd8(%rbp)
    0x555555660de3 <+67>:  callq  0x5555556c86d0            ; _D3std6string9toStringzFNaNbNeMNkAyaZPya
    0x555555660de8 <+72>:  movq   -0xd8(%rbp), %rdx

   873 	     *  bcf_hdr_id2name() - Translates numeric ID to sequence name
   874 	     */
** 875 	    pragma(inline, true) int bcf_hdr_name2id(const(bcf_hdr_t) *hdr, const(char) *id) { return bcf_hdr_id2int(hdr, BCF_DT_CTG, id); } // @suppress(dscanner.style.long_line)
   876 	    /// ditto
   877 	    pragma(inline, true) const(char) *bcf_hdr_id2name(const(bcf_hdr_t) *hdr, int rid) { return hdr.id[BCF_DT_CTG][rid].key; } // @suppress(dscanner.style.long_line)

    0x555555660def <+79>:  movq   %rdx, -0x98(%rbp)
    0x555555660df6 <+86>:  movq   %rax, -0xa0(%rbp)
    0x555555660dfd <+93>:  movq   -0x98(%rbp), %rdi
    0x555555660e04 <+100>: movq   -0xa0(%rbp), %rdx
    0x555555660e0b <+107>: movl   $0x1, %esi
    0x555555660e10 <+112>: callq  0x55555565ffc0            ; symbol stub for: bcf_hdr_id2int

** 213 	        auto rid = bcf_hdr_name2id(this.vcfheader.hdr, toStringz(c));

    0x555555660e15 <+117>: movl   %eax, -0xbc(%rbp)

-> 214 	        if (rid == -1) {

->  0x555555660e1b <+123>: cmpl   $-0x1, -0xbc(%rbp)
    0x555555660e22 <+130>: jne    0x555555660ffb            ; <+603> at vcf.d:218:14

   1   	/**
   1   	/**
   2

    0x555555660e28 <+136>: xorl   %eax, %eax
    0x555555660e2a <+138>: movl   %eax, %ecx

** 215 	            hts_log_error(__FUNCTION__, format("contig not found: %s", c));

    0x555555660e2c <+140>: movq   -0xb8(%rbp), %rdi
    0x555555660e33 <+147>: movq   -0xb0(%rbp), %rsi
    0x555555660e3a <+154>: leaq   0x9f4bf(%rip), %rdx
    0x555555660e41 <+161>: movl   $0x14, %r8d
    0x555555660e47 <+167>: movq   %rdx, -0xe0(%rbp)
    0x555555660e4e <+174>: movq   %r8, %rdx
    0x555555660e51 <+177>: movq   -0xe0(%rbp), %r8
    0x555555660e58 <+184>: movq   %rcx, -0xe8(%rbp)
    0x555555660e5f <+191>: movq   %r8, %rcx
    0x555555660e62 <+194>: callq  0x555555661020            ; _D3std6format__TQkTaTAyaZQtFNaNfxAaQoZQr at format.d:6427

   70  	/**! Logs an event with severity HTS_LOG_ERROR and default context. Parameters: format, ... */
   71  	//#define hts_log_error(...) hts_log(HTS_LOG_ERROR, __func__, __VA_ARGS__)
** 72  	void hts_log_error(const(char)[] ctx, string msg)
   73  	{

    0x555555660e67 <+199>: leaq   0x9f472(%rip), %rcx
    0x555555660e6e <+206>: movq   %rcx, -0x8(%rbp)
    0x555555660e72 <+210>: movq   $0x1b, -0x10(%rbp)
    0x555555660e7a <+218>: movq   %rdx, -0x18(%rbp)
    0x555555660e7e <+222>: movq   %rax, -0x20(%rbp)

** 74  	    string colormsg = "\x1b[0;31m" ~ msg ~ "\x1b[0m";

    0x555555660e82 <+226>: movq   $0x4, -0x40(%rbp)
    0x555555660e8a <+234>: leaq   0xae8a1(%rip), %rax
    0x555555660e91 <+241>: movq   %rax, -0x38(%rbp)
    0x555555660e95 <+245>: movq   $0x7, -0x50(%rbp)
    0x555555660e9d <+253>: leaq   0xae893(%rip), %rax
    0x555555660ea4 <+260>: movq   %rax, -0x48(%rbp)
    0x555555660ea8 <+264>: movq   -0x50(%rbp), %rax
    0x555555660eac <+268>: movq   -0x48(%rbp), %rcx
    0x555555660eb0 <+272>: movq   %rcx, -0x78(%rbp)
    0x555555660eb4 <+276>: movq   %rax, -0x80(%rbp)
    0x555555660eb8 <+280>: movq   -0x20(%rbp), %rax
    0x555555660ebc <+284>: movq   -0x18(%rbp), %rcx
    0x555555660ec0 <+288>: movq   %rcx, -0x68(%rbp)
    0x555555660ec4 <+292>: movq   %rax, -0x70(%rbp)
    0x555555660ec8 <+296>: movq   -0x40(%rbp), %rax
    0x555555660ecc <+300>: movq   -0x38(%rbp), %rcx
    0x555555660ed0 <+304>: movq   %rcx, -0x58(%rbp)
    0x555555660ed4 <+308>: movq   %rax, -0x60(%rbp)
    0x555555660ed8 <+312>: movq   $0x3, -0x90(%rbp)
    0x555555660ee3 <+323>: leaq   -0x80(%rbp), %rax
    0x555555660ee7 <+327>: movq   %rax, -0x88(%rbp)
    0x555555660eee <+334>: movq   -0x90(%rbp), %rsi
    0x555555660ef5 <+341>: movq   -0x88(%rbp), %rdx
    0x555555660efc <+348>: leaq   0xe95f5(%rip), %rdi       ; _D12TypeInfo_Aya6__initZ
    0x555555660f03 <+355>: callq  0x5555556e5d90            ; _d_arraycatnTX
    0x555555660f08 <+360>: movq   %rax, -0x30(%rbp)
    0x555555660f0c <+364>: movq   %rdx, -0x28(%rbp)

** 75  	    hts_log(htsLogLevel.HTS_LOG_ERROR, toStringz(ctx), toStringz(colormsg));
   76  	}
   77  	/**! Logs an event with severity HTS_LOG_WARNING and default context. Parameters: format, ... */

    0x555555660f10 <+368>: movq   -0x10(%rbp), %rdi
    0x555555660f14 <+372>: movq   -0x8(%rbp), %rsi
    0x555555660f18 <+376>: callq  0x5555556c8670            ; _D3std6string9toStringzFNaNbNeMAxaZPya
    0x555555660f1d <+381>: movq   -0x30(%rbp), %rdi
    0x555555660f21 <+385>: movq   -0x28(%rbp), %rsi
    0x555555660f25 <+389>: movq   %rax, -0xf0(%rbp)
    0x555555660f2c <+396>: callq  0x5555556c86d0            ; _D3std6string9toStringzFNaNbNeMNkAyaZPya
    0x555555660f31 <+401>: xorl   %r9d, %r9d
    0x555555660f34 <+404>: movb   %r9b, %r10b
    0x555555660f37 <+407>: movl   $0x1, %edi
    0x555555660f3c <+412>: movq   -0xf0(%rbp), %rsi
    0x555555660f43 <+419>: movq   %rax, %rdx
    0x555555660f46 <+422>: movb   %r10b, %al
    0x555555660f49 <+425>: callq  0x55555565ffd0            ; symbol stub for: hts_log

** 216 	            throw new Exception("contig not found");
   217 	        }

    0x555555660f4e <+430>: leaq   0x14486b(%rip), %rdi      ; _D9Exception7__ClassZ
    0x555555660f55 <+437>: callq  0x5555556e22d0            ; _d_allocclass
    0x555555660f5a <+442>: movq   %rax, %rcx
    0x555555660f5d <+445>: leaq   0xe80bc(%rip), %rdx       ; _D9Exception6__vtblZ
    0x555555660f64 <+452>: movq   %rdx, (%rax)
    0x555555660f67 <+455>: movq   $0x0, 0x8(%rax)
    0x555555660f6f <+463>: leaq   0xe80fa(%rip), %rdx       ; _D9Exception6__initZ
    0x555555660f76 <+470>: movups 0x10(%rdx), %xmm0
    0x555555660f7a <+474>: movups 0x20(%rdx), %xmm1
    0x555555660f7e <+478>: movups 0x30(%rdx), %xmm2
    0x555555660f82 <+482>: movups 0x3c(%rdx), %xmm3
    0x555555660f86 <+486>: movups %xmm3, 0x3c(%rax)
    0x555555660f8a <+490>: movups %xmm2, 0x30(%rax)
    0x555555660f8e <+494>: movups %xmm1, 0x20(%rax)
    0x555555660f92 <+498>: movups %xmm0, 0x10(%rax)
    0x555555660f96 <+502>: leaq   0x9f383(%rip), %rax
    0x555555660f9d <+509>: movq   %rax, -0xc8(%rbp)
    0x555555660fa4 <+516>: movq   $0x10, -0xd0(%rbp)
    0x555555660faf <+527>: movups -0xd0(%rbp), %xmm0
    0x555555660fb6 <+534>: movq   %rsp, %rax
    0x555555660fb9 <+537>: movups %xmm0, (%rax)
    0x555555660fbc <+540>: leaq   0x9f26d(%rip), %r8
    0x555555660fc3 <+547>: xorl   %r9d, %r9d
    0x555555660fc6 <+550>: movl   %r9d, %esi
    0x555555660fc9 <+553>: movl   $0xd8, %edx
    0x555555660fce <+558>: movl   $0x1f, %eax
    0x555555660fd3 <+563>: movq   %rcx, %rdi
    0x555555660fd6 <+566>: movq   %rcx, -0xf8(%rbp)
    0x555555660fdd <+573>: movq   %rax, %rcx
    0x555555660fe0 <+576>: callq  0x5555556dc620            ; _D6object9Exception6__ctorMFNaNbNiNfAyaQdmCQBp9ThrowableZCQBx
    0x555555660fe5 <+581>: movq   -0xf8(%rbp), %rcx
    0x555555660fec <+588>: movq   %rcx, %rdi
    0x555555660fef <+591>: movq   %rax, -0x100(%rbp)
    0x555555660ff6 <+598>: callq  0x5555556e1530            ; _d_throw_exception

** 218 	        else line.rid = rid;

    0x555555660ffb <+603>: movq   -0xa8(%rbp), %rax
    0x555555661002 <+610>: movq   0x10(%rax), %rax
    0x555555661006 <+614>: movl   -0xbc(%rbp), %ecx
    0x55555566100c <+620>: movl   %ecx, (%rax)

** 219 	    }
   220
   221

    0x55555566100e <+622>: addq   $0x110, %rsp              ; imm = 0x110
    0x555555661015 <+629>: popq   %rbp
    0x555555661016 <+630>: retq
(lldb)
